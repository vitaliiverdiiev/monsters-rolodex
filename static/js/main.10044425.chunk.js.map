{"version":3,"sources":["components/card/card.module.scss","components/card-list/card-list.module.scss","components/search-box/search-box.module.scss","components/card/card.jsx","components/card-list/card-list.jsx","components/search-box/search-box.jsx","App.js","reportWebVitals.js","index.js"],"names":["module","exports","Card","monster","className","x","src","id","alt","name","email","CardList","monsters","map","Search","searchMonsters","onChange","e","type","placeholder","App","useState","setMonsters","searchField","setSearchField","useEffect","fetch","then","response","json","data","filteredMonsters","filter","toLowerCase","includes","target","value","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gHACAA,EAAOC,QAAU,CAAC,KAAO,qB,gBCAzBD,EAAOC,QAAU,CAAC,SAAW,8B,gBCA7BD,EAAOC,QAAU,CAAC,OAAS,6B,uJCeZC,EAbF,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACd,OACE,sBAAKC,UAAWC,IAAEH,KAAlB,UACE,qBACEI,IAAG,+BAA0BH,EAAQI,GAAlC,0BACHC,IAAG,kBAAaL,EAAQI,MAE1B,6BAAKJ,EAAQM,OACb,kCAAKN,EAAQO,MAAb,W,gBCCSC,EARE,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OACf,qBAAKR,UAAWC,IAAEM,SAAlB,SACGC,EAASC,KAAI,SAACV,GAAD,OACZ,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQI,U,gBCSVO,EAbA,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,eAChB,OACE,uBACEX,UAAWC,IAAES,OACbE,SAAU,SAACC,GAAD,OAAOF,EAAeE,IAChCC,KAAK,SACLT,KAAK,UACLF,GAAG,iBACHY,YAAY,qB,MCqBHC,MA3Bf,WACE,MAAgCC,mBAAS,IAAzC,mBAAOT,EAAP,KAAiBU,EAAjB,KACA,EAAsCD,mBAAS,IAA/C,mBAAOE,EAAP,KAAoBC,EAApB,KAEAC,qBAAU,WACRC,MAAM,8CACHC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GAAD,OAAUR,EAAYQ,QAC7B,IAEH,IAAMC,EAAmBnB,EAASoB,QAAO,SAAC7B,GAAD,OACvCA,EAAQM,KAAKwB,cAAcC,SAASX,EAAYU,kBAOlD,OACE,sBAAK7B,UAAU,MAAf,UACE,oDACA,cAAC,EAAD,CAAQW,eAAgB,SAACE,GAAD,OAPL,SAACA,GACtBO,EAAeP,EAAEkB,OAAOC,OAMSrB,CAAeE,MAC9C,cAAC,EAAD,CAAUL,SAAUmB,QCfXM,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.10044425.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Card\":\"card_Card__3w76H\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CardList\":\"card-list_CardList__gTAeo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Search\":\"search-box_Search__3hSdy\"};","import React from \"react\";\nimport x from \"./card.module.scss\";\n\nconst Card = ({ monster }) => {\n  return (\n    <div className={x.Card}>\n      <img\n        src={`https://robohash.org/${monster.id}/set=set2&size=180x180`}\n        alt={`Monster ${monster.id}`}\n      />\n      <h2>{monster.name}</h2>\n      <p> {monster.email} </p>\n    </div>\n  );\n};\n\nexport default Card;\n","import React, { useState } from \"react\";\nimport Card from \"../card/card\";\nimport x from \"./card-list.module.scss\";\n\nconst CardList = ({ monsters }) => (\n  <div className={x.CardList}>\n    {monsters.map((monster) => (\n      <Card key={monster.id} monster={monster} />\n    ))}\n  </div>\n);\n\nexport default CardList;\n","import React from \"react\";\nimport x from \"./search-box.module.scss\";  \n\nconst Search = ({ searchMonsters }) => {\n  return (\n    <input\n      className={x.Search}\n      onChange={(e) => searchMonsters(e)}\n      type=\"search\"\n      name=\"monster\"\n      id=\"search-monster\"\n      placeholder=\"Search monsters\"\n    />\n  );\n};\n\nexport default Search;\n","import React, { useState, useEffect } from \"react\";\nimport CardList from \"./components/card-list/card-list\";\nimport Search from \"./components/search-box/search-box\";\nimport \"./App.css\";\n\nfunction App() {\n  const [monsters, setMonsters] = useState([]);\n  const [searchField, setSearchField] = useState(\"\");\n\n  useEffect(() => {\n    fetch(\"https://jsonplaceholder.typicode.com/users\")\n      .then((response) => response.json())\n      .then((data) => setMonsters(data));\n  }, []);\n\n  const filteredMonsters = monsters.filter((monster) =>\n    monster.name.toLowerCase().includes(searchField.toLowerCase())\n  );\n\n  const searchMonsters = (e) => {\n    setSearchField(e.target.value);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1> Monsters Rolodex </h1>\n      <Search searchMonsters={(e) => searchMonsters(e)} />\n      <CardList monsters={filteredMonsters} />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}